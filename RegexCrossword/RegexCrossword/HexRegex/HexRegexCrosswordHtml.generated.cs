#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegexCrossword.HexRegex
{
    
    #line 2 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    
    #line 3 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
    using HexRegex;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.4.0")]
    internal partial class HexRegexCrosswordHtml : RazorGenerator.Templating.RazorTemplateBase
    {
#line hidden

        #line 4 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"

    public HexRegexCrossword Model { get; set; }

        #line default
        #line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");




WriteLiteral(@"
<html>
    <head>
        <style type=""text/css"">
            
            body {
                overflow-x: hidden;
            }
            
            .hexagon {
                border-color: blue;
                border-style: solid;
                border-width: 1px;
                display: inline-block;
                padding: 0;
                width: 2em;
                margin-left: -1em;
                height: 2em;
                margin-top: -1em;
                text-align: center;
                position: absolute;
            }
        </style>
        <script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js""></script>
        <script type=""text/javascript"">
            // use axial coords http://www.redblobgames.com/grids/hexagons/
");


            
            #line 32 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
               var firstX = true; 

            
            #line default
            #line hidden
WriteLiteral("            var hexData = {\r\n");


            
            #line 34 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
             for (int x = -6; x <= 6; x++)
            {

            
            #line default
            #line hidden
WriteLiteral("                ");


            
            #line 36 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                  Write(firstX ? "" : ",");

            
            #line default
            #line hidden
WriteLiteral(" \"");


            
            #line 36 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                                       Write(x);

            
            #line default
            #line hidden
WriteLiteral("\":{");

WriteLiteral("\r\n");


            
            #line 37 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                firstX = false;
                var firstZ = true;
                for (int y = -6; y <= 6; y++)
                {
                    var z = 0 - x - y;
                    if (Math.Abs(z) <= 6)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");


            
            #line 44 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                          Write(firstZ ? "" : ",");

            
            #line default
            #line hidden
WriteLiteral(" \"");


            
            #line 44 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                                               Write(z);

            
            #line default
            #line hidden
WriteLiteral("\" : \"");


            
            #line 44 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                                                      Write(x);

            
            #line default
            #line hidden
WriteLiteral(",");


            
            #line 44 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                                                         Write(z);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral("\r\n");


            
            #line 45 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
                        firstZ = false;
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

WriteLiteral("}");

WriteLiteral("\r\n");


            
            #line 49 "..\..\HexRegex\HexRegexCrosswordHtml.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            };\r\n            var SQRT_3 = Math.sqrt(3);\r\n            var SIZE = 25" +
";\r\n            var CENTRE_X = SIZE * 15;\r\n            var CENTRE_Y = CENTRE_X;\r\n" +
"\r\n            var hexCornerOffsets = [];\r\n            for (var i = 0; i <= 6; i+" +
"+) {\r\n                var angle = 2 * Math.PI / 6 * (i + 0.5);\r\n                " +
"var x_i = SIZE * Math.cos(angle);\r\n                var y_i = SIZE * Math.sin(ang" +
"le);\r\n                hexCornerOffsets[i] = { \'x\': x_i, \'y\': y_i };\r\n           " +
" }\r\n\r\n            $(function () {\r\n                var container = $(\'#container" +
"\');\r\n                var canvas = document.getElementById(\"canvas\").getContext(\'" +
"2d\');\r\n                $.each(hexData, function (q, rs) {\r\n                    q" +
" = q - 0;\r\n                    $.each(rs, function (r, val) {\r\n                 " +
"       r = r - 0;\r\n                        var x = CENTRE_X + (SIZE * SQRT_3 * (" +
"q + r / 2.0));\r\n                        var y = CENTRE_Y + (SIZE * 3.0 / 2.0 * r" +
");\r\n\r\n                        var div = $(\"<div />\")\r\n                          " +
"  .addClass(\'hexagon\')\r\n                            .text(val)\r\n                " +
"            .offset({ top: y, left: x });\r\n                        container.app" +
"end(div);\r\n                        hexData[q][r] = div;\r\n\r\n                     " +
"   canvas.beginPath();\r\n                        canvas.moveTo(x + hexCornerOffse" +
"ts[0].x, y + hexCornerOffsets[0].y);\r\n                        for (var i = 1; i " +
"<= 6; i++) {\r\n                            canvas.lineTo(x + hexCornerOffsets[i]." +
"x, y + hexCornerOffsets[i].y);\r\n                        }\r\n                     " +
"   canvas.stroke();\r\n                    });\r\n                });\r\n            }" +
");\r\n        </script>\r\n    </head>\r\n    <body>\r\n        <div id=\"container\">\r\n  " +
"          <canvas id=\"canvas\" width=\"1000\" height=\"1000\"></canvas>\r\n            " +
"<div id=\"elts\"></div>\r\n        </div>\r\n    </body>\r\n</html>\r\n");


        }
    }
}
#pragma warning restore 1591
